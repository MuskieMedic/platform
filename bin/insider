#!/opt/app/platform/python/bin/python

# block to import lib folder
import sys
from os import listdir
from os.path import join, dirname, isdir, abspath

app_path = abspath(join(dirname(__file__), '..'))

lib_path = join(app_path, 'lib')
libs = [join(lib_path, item) for item in listdir(lib_path) if isdir(join(lib_path, item))]
map(lambda x: sys.path.append(x), libs)
# end of block to import lib folder

import argparse
import logging
from os.path import join

from syncloud_app import main
from syncloud_app import logger
from syncloud_platform.config.config import PlatformConfig

import syncloud_platform.insider.facade


def create_args_parser():
    parser = argparse.ArgumentParser(description='Syncloud insider maps port on router and creates DNS records')
    parser.add_argument('--debug', action='store_true')

    subparsers = parser.add_subparsers(help='available commands', dest='action')
    subparsers.add_parser('sync_all', help="sync port mappings and dns records")
    return parser


if __name__ == '__main__':
    parser = create_args_parser()
    args = parser.parse_args()

    console = True if args.debug else False
    level = logging.DEBUG if args.debug else logging.INFO
    logger.init(level, console, join(PlatformConfig().get_platform_log()))

    facade = syncloud_platform.insider.facade.get_insider()

    main.execute(facade, args)
