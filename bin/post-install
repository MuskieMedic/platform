import os
from subprocess import check_output
from os.path import isdir, join
import shutil
from syncloud_app import logger
from syncloud_platform.injector import get_injector
from syncloud_platform.application import api

from syncloud_platform.gaplib import fs, linux, gen

# this makes config file paths relative
apps_root = '/opt/app'
data_root = '/opt/data'

APP_NAME = 'platform'
USER_NAME = 'platform'

log = logger.get_logger('platform_post_install')

linux.fix_locale()

linux.useradd(USER_NAME)

install_dir = join(apps_root, APP_NAME)
data_dir = join(data_root, APP_NAME)
templates_path = join(install_dir, 'config.templates')
config_dir = join(data_dir, 'config')

variables = {
    'apps_root': apps_root,
    'data_root': data_root,
    'configs_root': data_root,
    'config_root': data_dir,
    'config_dir': config_dir,
    'app_dir': install_dir,
    'app_data': data_dir,
    'app_data_prefix': ''
}
gen.generate_files(templates_path, config_dir, variables)

platform_paths = api.get_app_paths(APP_NAME)
log.info(fs.chownpath(platform_paths.get_install_dir(), USER_NAME, recursive=True))

data_dir = platform_paths.get_data_dir()
fs.chownpath(data_dir, USER_NAME)

data_dirs = [
    join(data_dir, 'webapps'),
    join(data_dir, 'log'),
    join(data_dir, 'nginx'),
    join(data_dir, 'openldap'),
    join(data_dir, 'openldap-data'),
    join(data_dir, 'certbot')
]

for data_dir in data_dirs:
    fs.makepath(data_dir)
    fs.chownpath(data_dir, USER_NAME)

injector = get_injector()

hardware = injector.hardware
hardware.init_disk()

injector.tls.init_certificate()

injector.platform_cron.remove()
injector.platform_cron.create()

udev = injector.udev
udev.remove()
udev.add()

ldap_auth = injector.ldap_auth
ldap_auth.init(fix_permissions=True)

nginx = injector.nginx
nginx.init_config()

systemctl = injector.systemctl
systemctl.add_service(APP_NAME, 'platform.cpu-frequency')
systemctl.add_service(APP_NAME, 'platform.insider-sync')
systemctl.add_service(APP_NAME, 'platform.ntpdate')
systemctl.add_service(APP_NAME, 'platform.uwsgi-api')
systemctl.add_service(APP_NAME, 'platform.uwsgi-internal')
systemctl.add_service(APP_NAME, 'platform.uwsgi-public')
systemctl.add_service(APP_NAME, 'platform.nginx-api')
systemctl.add_service(APP_NAME, 'platform.nginx-internal')
systemctl.add_service(APP_NAME, 'platform.nginx-public')
systemctl.add_service(APP_NAME, 'platform.openldap')
